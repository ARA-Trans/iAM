//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CalculateEvaluate.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AppliedResearchAssociates.CalculateEvaluate {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class CalculateEvaluateLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, NUMBER=17, 
		AND=18, OR=19, IDENTIFIER=20, WHITESPACE=21;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "NUMBER", 
		"MANTISSA_PART", "DECIMAL_PART", "EXPONENT_PART", "NATURAL_NUMBER", "AND", 
		"OR", "IDENTIFIER", "WHITESPACE", "DIGIT", "NON_DIGIT"
	};


	public CalculateEvaluateLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CalculateEvaluateLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'-'", "'*'", "'/'", "'+'", "','", "'='", "'<>'", 
		"'<'", "'<='", "'>='", "'>'", "'|'", "'['", "']'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "NUMBER", "AND", "OR", "IDENTIFIER", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CalculateEvaluate.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CalculateEvaluateLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x17', '\x97', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', 
		'\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x5', '\x12', '_', 
		'\n', '\x12', '\x3', '\x13', '\x3', '\x13', '\x5', '\x13', '\x63', '\n', 
		'\x13', '\x3', '\x13', '\x5', '\x13', '\x66', '\n', '\x13', '\x3', '\x14', 
		'\x3', '\x14', '\x6', '\x14', 'j', '\n', '\x14', '\r', '\x14', '\xE', 
		'\x14', 'k', '\x3', '\x15', '\x3', '\x15', '\x5', '\x15', 'p', '\n', '\x15', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', 
		'\a', '\x16', 'w', '\n', '\x16', '\f', '\x16', '\xE', '\x16', 'z', '\v', 
		'\x16', '\x5', '\x16', '|', '\n', '\x16', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', 
		'\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\a', '\x19', '\x88', '\n', 
		'\x19', '\f', '\x19', '\xE', '\x19', '\x8B', '\v', '\x19', '\x3', '\x1A', 
		'\x6', '\x1A', '\x8E', '\n', '\x1A', '\r', '\x1A', '\xE', '\x1A', '\x8F', 
		'\x3', '\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', 
		'\x3', '\x1C', '\x2', '\x2', '\x1D', '\x3', '\x3', '\x5', '\x4', '\a', 
		'\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', 
		'\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', 
		'\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', '\x2', 
		'\'', '\x2', ')', '\x2', '+', '\x2', '-', '\x14', '/', '\x15', '\x31', 
		'\x16', '\x33', '\x17', '\x35', '\x2', '\x37', '\x2', '\x3', '\x2', '\r', 
		'\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', '-', '-', '/', '/', '\x3', 
		'\x2', '\x33', ';', '\x4', '\x2', '\x43', '\x43', '\x63', '\x63', '\x4', 
		'\x2', 'P', 'P', 'p', 'p', '\x4', '\x2', '\x46', '\x46', '\x66', '\x66', 
		'\x4', '\x2', 'Q', 'Q', 'q', 'q', '\x4', '\x2', 'T', 'T', 't', 't', '\x5', 
		'\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x3', '\x2', '\x32', ';', 
		'\x5', '\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x2', '\x9A', 
		'\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '-', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x31', '\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '\x39', '\x3', '\x2', '\x2', '\x2', '\x5', ';', '\x3', '\x2', 
		'\x2', '\x2', '\a', '=', '\x3', '\x2', '\x2', '\x2', '\t', '?', '\x3', 
		'\x2', '\x2', '\x2', '\v', '\x41', '\x3', '\x2', '\x2', '\x2', '\r', '\x43', 
		'\x3', '\x2', '\x2', '\x2', '\xF', '\x45', '\x3', '\x2', '\x2', '\x2', 
		'\x11', 'G', '\x3', '\x2', '\x2', '\x2', '\x13', 'I', '\x3', '\x2', '\x2', 
		'\x2', '\x15', 'L', '\x3', '\x2', '\x2', '\x2', '\x17', 'N', '\x3', '\x2', 
		'\x2', '\x2', '\x19', 'Q', '\x3', '\x2', '\x2', '\x2', '\x1B', 'T', '\x3', 
		'\x2', '\x2', '\x2', '\x1D', 'V', '\x3', '\x2', '\x2', '\x2', '\x1F', 
		'X', '\x3', '\x2', '\x2', '\x2', '!', 'Z', '\x3', '\x2', '\x2', '\x2', 
		'#', '\\', '\x3', '\x2', '\x2', '\x2', '%', '\x65', '\x3', '\x2', '\x2', 
		'\x2', '\'', 'g', '\x3', '\x2', '\x2', '\x2', ')', 'm', '\x3', '\x2', 
		'\x2', '\x2', '+', '{', '\x3', '\x2', '\x2', '\x2', '-', '}', '\x3', '\x2', 
		'\x2', '\x2', '/', '\x81', '\x3', '\x2', '\x2', '\x2', '\x31', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '\x33', '\x8D', '\x3', '\x2', '\x2', '\x2', 
		'\x35', '\x93', '\x3', '\x2', '\x2', '\x2', '\x37', '\x95', '\x3', '\x2', 
		'\x2', '\x2', '\x39', ':', '\a', '*', '\x2', '\x2', ':', '\x4', '\x3', 
		'\x2', '\x2', '\x2', ';', '<', '\a', '+', '\x2', '\x2', '<', '\x6', '\x3', 
		'\x2', '\x2', '\x2', '=', '>', '\a', '/', '\x2', '\x2', '>', '\b', '\x3', 
		'\x2', '\x2', '\x2', '?', '@', '\a', ',', '\x2', '\x2', '@', '\n', '\x3', 
		'\x2', '\x2', '\x2', '\x41', '\x42', '\a', '\x31', '\x2', '\x2', '\x42', 
		'\f', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\a', '-', '\x2', '\x2', 
		'\x44', '\xE', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\a', '.', 
		'\x2', '\x2', '\x46', '\x10', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\a', 
		'?', '\x2', '\x2', 'H', '\x12', '\x3', '\x2', '\x2', '\x2', 'I', 'J', 
		'\a', '>', '\x2', '\x2', 'J', 'K', '\a', '@', '\x2', '\x2', 'K', '\x14', 
		'\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', '>', '\x2', '\x2', 'M', '\x16', 
		'\x3', '\x2', '\x2', '\x2', 'N', 'O', '\a', '>', '\x2', '\x2', 'O', 'P', 
		'\a', '?', '\x2', '\x2', 'P', '\x18', '\x3', '\x2', '\x2', '\x2', 'Q', 
		'R', '\a', '@', '\x2', '\x2', 'R', 'S', '\a', '?', '\x2', '\x2', 'S', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\a', '@', '\x2', '\x2', 
		'U', '\x1C', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\a', '~', '\x2', '\x2', 
		'W', '\x1E', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\a', ']', '\x2', '\x2', 
		'Y', ' ', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\a', '_', '\x2', '\x2', 
		'[', '\"', '\x3', '\x2', '\x2', '\x2', '\\', '^', '\x5', '%', '\x13', 
		'\x2', ']', '_', '\x5', ')', '\x15', '\x2', '^', ']', '\x3', '\x2', '\x2', 
		'\x2', '^', '_', '\x3', '\x2', '\x2', '\x2', '_', '$', '\x3', '\x2', '\x2', 
		'\x2', '`', '\x62', '\x5', '+', '\x16', '\x2', '\x61', '\x63', '\x5', 
		'\'', '\x14', '\x2', '\x62', '\x61', '\x3', '\x2', '\x2', '\x2', '\x62', 
		'\x63', '\x3', '\x2', '\x2', '\x2', '\x63', '\x66', '\x3', '\x2', '\x2', 
		'\x2', '\x64', '\x66', '\x5', '\'', '\x14', '\x2', '\x65', '`', '\x3', 
		'\x2', '\x2', '\x2', '\x65', '\x64', '\x3', '\x2', '\x2', '\x2', '\x66', 
		'&', '\x3', '\x2', '\x2', '\x2', 'g', 'i', '\a', '\x30', '\x2', '\x2', 
		'h', 'j', '\x5', '\x35', '\x1B', '\x2', 'i', 'h', '\x3', '\x2', '\x2', 
		'\x2', 'j', 'k', '\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', 
		'\x2', 'k', 'l', '\x3', '\x2', '\x2', '\x2', 'l', '(', '\x3', '\x2', '\x2', 
		'\x2', 'm', 'o', '\t', '\x2', '\x2', '\x2', 'n', 'p', '\t', '\x3', '\x2', 
		'\x2', 'o', 'n', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\x3', '\x2', '\x2', 
		'\x2', 'p', 'q', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\x5', '+', '\x16', 
		'\x2', 'r', '*', '\x3', '\x2', '\x2', '\x2', 's', '|', '\a', '\x32', '\x2', 
		'\x2', 't', 'x', '\t', '\x4', '\x2', '\x2', 'u', 'w', '\x5', '\x35', '\x1B', 
		'\x2', 'v', 'u', '\x3', '\x2', '\x2', '\x2', 'w', 'z', '\x3', '\x2', '\x2', 
		'\x2', 'x', 'v', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\x3', '\x2', '\x2', 
		'\x2', 'y', '|', '\x3', '\x2', '\x2', '\x2', 'z', 'x', '\x3', '\x2', '\x2', 
		'\x2', '{', 's', '\x3', '\x2', '\x2', '\x2', '{', 't', '\x3', '\x2', '\x2', 
		'\x2', '|', ',', '\x3', '\x2', '\x2', '\x2', '}', '~', '\t', '\x5', '\x2', 
		'\x2', '~', '\x7F', '\t', '\x6', '\x2', '\x2', '\x7F', '\x80', '\t', '\a', 
		'\x2', '\x2', '\x80', '.', '\x3', '\x2', '\x2', '\x2', '\x81', '\x82', 
		'\t', '\b', '\x2', '\x2', '\x82', '\x83', '\t', '\t', '\x2', '\x2', '\x83', 
		'\x30', '\x3', '\x2', '\x2', '\x2', '\x84', '\x89', '\x5', '\x37', '\x1C', 
		'\x2', '\x85', '\x88', '\x5', '\x37', '\x1C', '\x2', '\x86', '\x88', '\x5', 
		'\x35', '\x1B', '\x2', '\x87', '\x85', '\x3', '\x2', '\x2', '\x2', '\x87', 
		'\x86', '\x3', '\x2', '\x2', '\x2', '\x88', '\x8B', '\x3', '\x2', '\x2', 
		'\x2', '\x89', '\x87', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8A', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x32', '\x3', '\x2', '\x2', '\x2', '\x8B', 
		'\x89', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8E', '\t', '\n', '\x2', 
		'\x2', '\x8D', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8F', '\x3', 
		'\x2', '\x2', '\x2', '\x8F', '\x8D', '\x3', '\x2', '\x2', '\x2', '\x8F', 
		'\x90', '\x3', '\x2', '\x2', '\x2', '\x90', '\x91', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x92', '\b', '\x1A', '\x2', '\x2', '\x92', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\x93', '\x94', '\t', '\v', '\x2', '\x2', '\x94', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\x95', '\x96', '\t', '\f', '\x2', 
		'\x2', '\x96', '\x38', '\x3', '\x2', '\x2', '\x2', '\r', '\x2', '^', '\x62', 
		'\x65', 'k', 'o', 'x', '{', '\x87', '\x89', '\x8F', '\x3', '\x2', '\x3', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace AppliedResearchAssociates.CalculateEvaluate
